(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"kAW+":function(e,n,r){"use strict";r.r(n),r.d(n,"WalletLinkConnector",(function(){return c}));var t=r("NEbA");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var c=function(e){var n,t;function c(n){var r,t=n.url,o=n.appName,i=n.appLogoUrl,c=n.darkMode,u=n.supportedChainIds;return(r=e.call(this,{supportedChainIds:u})||this).url=t,r.appName=o,r.appLogoUrl=i,r.darkMode=c||!1,r.handleChainChanged=r.handleChainChanged.bind(a(r)),r.handleAccountsChanged=r.handleAccountsChanged.bind(a(r)),r}t=e,(n=c).prototype=Object.create(t.prototype),n.prototype.constructor=n,i(n,t);var u=c.prototype;return u.activate=function(){try{var e=this,n=function(){return Promise.resolve(e.provider.request({method:"eth_requestAccounts"})).then((function(n){var r=n[0];return e.provider.on("chainChanged",e.handleChainChanged),e.provider.on("accountsChanged",e.handleAccountsChanged),{provider:e.provider,account:r}}))},t=function(){if(window.ethereum&&!0===window.ethereum.isCoinbaseWallet)e.provider=window.ethereum;else{var n=function(){if(!e.walletLink)return Promise.resolve(Promise.all([r.e(4),r.e(16)]).then(r.t.bind(null,"9bX6",7)).then((function(e){var n;return null!=(n=null==e?void 0:e.default)?n:e}))).then((function(n){e.walletLink=new n(o({appName:e.appName,darkMode:e.darkMode},e.appLogoUrl?{appLogoUrl:e.appLogoUrl}:{})),e.provider=e.walletLink.makeWeb3Provider(e.url,1)}))}();if(n&&n.then)return n.then((function(){}))}}();return Promise.resolve(t&&t.then?t.then(n):n())}catch(i){return Promise.reject(i)}},u.getProvider=function(){try{return Promise.resolve(this.provider)}catch(e){return Promise.reject(e)}},u.getChainId=function(){try{return Promise.resolve(this.provider.chainId)}catch(e){return Promise.reject(e)}},u.getAccount=function(){try{return Promise.resolve(this.provider.request({method:"eth_requestAccounts"})).then((function(e){return e[0]}))}catch(e){return Promise.reject(e)}},u.deactivate=function(){this.provider.removeListener("chainChanged",this.handleChainChanged),this.provider.removeListener("accountsChanged",this.handleAccountsChanged)},u.close=function(){try{return this.provider.close(),this.emitDeactivate(),Promise.resolve()}catch(e){return Promise.reject(e)}},u.handleChainChanged=function(e){this.emitUpdate({chainId:e})},u.handleAccountsChanged=function(e){this.emitUpdate({account:e[0]})},c}(t.a)}}]);